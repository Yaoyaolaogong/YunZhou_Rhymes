<template>
  <div :class="{ dark: isDarkMode }" class="min-h-screen transition bg-gradient-to-br from-yellow-50 to-yellow-200 dark:from-gray-800 dark:to-gray-900 text-gray-800 dark:text-gray-100">
    <div class="max-w-5xl mx-auto py-10 px-6">
      <!-- 顶部标题与控制按钮 -->
      <div class="flex items-center justify-between mb-8">
        <h2 class="text-4xl font-extrabold text-yellow-700 dark:text-yellow-300">📜 诗词搜索</h2>
        <button @click="toggleDarkMode" class="text-3xl hover:scale-110 transition text-yellow-700 dark:text-yellow-300">
          {{ isDarkMode ? '☀️' : '🌙' }}
        </button>
      </div>

      <!-- 控制区：字体按钮和搜索框 -->
      <div class="flex flex-col md:flex-row items-center justify-between gap-4 mb-6">
        <!-- 字体大小按钮 -->
        <div class="flex gap-3">
          <button @click="adjustFontSize(-1)" class="bg-yellow-400 text-yellow-900 px-4 py-2 rounded-lg shadow hover:bg-yellow-500 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 transition">A⁻</button>
          <button @click="adjustFontSize(1)" class="bg-yellow-400 text-yellow-900 px-4 py-2 rounded-lg shadow hover:bg-yellow-500 dark:bg-gray-700 dark:text-gray-200 dark:hover:bg-gray-600 transition">A⁺</button>
        </div>

        <!-- 搜索框 + 搜索按钮 -->
        <div class="flex w-full md:w-auto gap-3">
          <input
            v-model="searchQuery"
            type="text"
            :style="{ fontSize: fontSize + 'px' }"
            placeholder="请输入作者、标题或诗句片段"
            class="flex-1 px-4 py-2 border border-yellow-500 rounded-lg shadow focus:outline-none focus:ring-2 focus:ring-yellow-600 dark:bg-gray-700 dark:border-gray-600 dark:text-white transition"
          />
          <button
            @click="searchPoetry"
            class="px-5 py-2 bg-yellow-600 text-white rounded-lg shadow hover:bg-yellow-700 transition"
          >
            🔍 搜索
          </button>
        </div>
      </div>

      <!-- 加载状态 -->
      <div v-if="loading" class="text-center text-blue-500 my-6 text-lg font-medium">
        正在搜索，请稍候...
      </div>

      <!-- 搜索结果 -->
      <transition-group v-if="sortedResults.length" name="fade" tag="div" class="space-y-4">
        <div
          v-for="(poem, index) in sortedResults"
          :key="poem.id"
          class="relative bg-white dark:bg-gray-700 p-6 rounded-lg shadow-md border-l-4 border-yellow-500 hover:shadow-lg transition transform hover:-translate-y-1 cursor-pointer"
          @click="goToDetail(poem.id)"
          :style="{ fontSize: fontSize + 'px' }"
        >
          <!-- 收藏按钮 -->
          <button
            class="absolute top-3 right-3 text-xl text-red-500 hover:scale-110 transition"
            @click.stop="toggleFavorite(poem.id)"
            :title="isFavorite(poem.id) ? '取消收藏' : '加入收藏'"
          >
            {{ isFavorite(poem.id) ? '❤️' : '🤍' }}
          </button>

          <!-- 标题和内容 -->
          <h3 class="text-xl font-semibold mb-2">
            {{ poem.title }} <span class="text-sm text-gray-500 dark:text-gray-300">- {{ poem.author }}</span>
          </h3>
          <p class="whitespace-pre-line text-gray-700 dark:text-gray-200 leading-relaxed">
            {{ poem.content }}
          </p>
        </div>
      </transition-group>

      <!-- 无结果提示 -->
      <div v-if="searched && !loading && sortedResults.length === 0" class="text-center text-gray-500 dark:text-gray-300 mt-10 text-lg">
        🤔 没找到相关诗词，请尝试其他关键词
      </div>
    </div>
  </div>
</template>

<script>
export default {
  name: 'PoetrySearch',
  data() {
    return {
      searchQuery: '',
      results: [],
      searched: false,
      loading: false,
      favorites: JSON.parse(localStorage.getItem('favorites') || '[]'),
      fontSize: 16,
      isDarkMode: JSON.parse(localStorage.getItem('darkMode') || 'false'),
      poetryData: [
        {
          id: 1,
          title: '静夜思',
          author: '李白',
          content: '床前明月光，疑是地上霜。\n举头望明月，低头思故乡。'
        },
        {
          id: 2,
          title: '春晓',
          author: '孟浩然',
          content: '春眠不觉晓，处处闻啼鸟。\n夜来风雨声，花落知多少。'
        },
        {
          id: 3,
          title: '登鹳雀楼',
          author: '王之涣',
          content: '白日依山尽，黄河入海流。\n欲穷千里目，更上一层楼。'
        },
        {
          id: 4,
          title: '望庐山瀑布',
          author: '李白',
          content: '日照香炉生紫烟，遥看瀑布挂前川。\n飞流直下三千尺，疑是银河落九天。'
        }
      ]
    };
  },
  computed: {
    sortedResults() {
      return [...this.results].sort((a, b) => {
        const aFav = this.isFavorite(a.id) ? 0 : 1;
        const bFav = this.isFavorite(b.id) ? 0 : 1;
        return aFav - bFav;
      });
    }
  },
  methods: {
    searchPoetry() {
      this.searched = false;
      this.results = [];

      if (!this.searchQuery.trim()) {
        alert('请输入搜索内容');
        return;
      }

      this.loading = true;

      setTimeout(() => {
        const query = this.searchQuery.trim().toLowerCase();
        const results = this.poetryData.filter(poem =>
          poem.title.toLowerCase().includes(query) ||
          poem.author.toLowerCase().includes(query) ||
          poem.content.toLowerCase().includes(query)
        );
        this.results = results;
        this.loading = false;
        this.searched = true;
      }, 400);
    },
    goToDetail(id) {
      this.$router.push(`/poem/${id}`);
    },
    isFavorite(id) {
      return this.favorites.includes(id);
    },
    toggleFavorite(id) {
      if (this.isFavorite(id)) {
        this.favorites = this.favorites.filter(f => f !== id);
      } else {
        this.favorites.push(id);
      }
      localStorage.setItem('favorites', JSON.stringify(this.favorites));
    },
    adjustFontSize(delta) {
      this.fontSize = Math.max(12, this.fontSize + delta);
    },
    toggleDarkMode() {
      this.isDarkMode = !this.isDarkMode;
      localStorage.setItem('darkMode', JSON.stringify(this.isDarkMode));
    }
  }
};
</script>

<style scoped>
.fade-enter-active, .fade-leave-active {
  transition: all 0.3s ease;
}
.fade-enter-from, .fade-leave-to {
  opacity: 0;
  transform: translateY(10px);
}
</style>
